[
  {
    "ContainingType": "MakingOrder.Controllers.CustomerController",
    "Method": "Get",
    "RelativePath": "api/Customer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.CustomerController",
    "Method": "Create",
    "RelativePath": "api/Customer/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MakingOrder.WebModel.CreateCustomerRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.CustomerController",
    "Method": "Login",
    "RelativePath": "api/Customer/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MakingOrder.WebModel.CustomerLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.PlaceOrderController",
    "Method": "Create",
    "RelativePath": "api/PlaceOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MakingOrder.WebModel.CreateOrderRequestCheckAuth",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.PlaceOrderController",
    "Method": "Get",
    "RelativePath": "api/PlaceOrder/getAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.PlaceOrderController",
    "Method": "GetMyOrders",
    "RelativePath": "api/PlaceOrder/getYourOrders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.ProductController",
    "Method": "GetAllProducts",
    "RelativePath": "api/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.ProductController",
    "Method": "CreateProduct",
    "RelativePath": "api/Product",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MakingOrder.WebModel.CreateProductRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MakingOrder.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MakingOrder.WeatherForecast, MakingOrder, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]